const restoreButton=document.getElementById("restore"),openButton=document.getElementById("open"),saveButton=document.getElementById("save"),newButton=document.getElementById("new"),markdownContent=document.getElementById("markdown-content"),expandButton=document.getElementById("expand-mode"),htmlPreview=document.getElementById("html-preview"),themeModeButton=document.getElementById("theme-mode"),editor=document.getElementById("editor");let fileHandle;function lightMode(){document.body.classList.toggle("light-mode"),themeModeButton.classList.toggle("btn-light-mode"),restoreButton.classList.toggle("btn-light-mode"),openButton.classList.toggle("btn-light-mode"),saveButton.classList.toggle("btn-light-mode"),newButton.classList.toggle("btn-light-mode"),expandButton.classList.toggle("btn-light-mode"),themeModeButton.innerText="Light"===themeModeButton.innerText?"Dark":"Light",markdownContent.classList.toggle("light-markdown-content"),htmlPreview.classList.toggle("light-html-preview")}function parseHtmlPreview(e){let t=marked.parse(e);htmlPreview.innerHTML=DOMPurify.sanitize(t,{USE_PROFILES:{html:!0}})}function expandFile(){editor.classList.toggle("distraction-free"),expandButton.innerText="Full Mode"===expandButton.innerText?"Minimize Mode":"Full Mode"}async function newFile(){markdownContent.value="",htmlPreview.innerHTML="",await removeFile()}async function openFile(){try{[fileHandle]=await window.showOpenFilePicker(),await restoreFromFile(fileHandle)}catch(e){}}async function removeFile(){fileHandle=void 0,await idbKeyval.del("file")}async function restoreFromFile(){let e=await (await fileHandle.getFile()).text();await idbKeyval.set("file",fileHandle),markdownContent.value=e,parseHtmlPreview(e),restoreButton.style.display="none"}async function saveFile(){var e=markdownContent.value;if(!fileHandle)try{await idbKeyval.set("file",fileHandle=await window.showSaveFilePicker())}catch(t){console.log("Error:",t)}if(!fileHandle||!await verifyPermissions(fileHandle))return;let n=await fileHandle.createWritable();await n.write(e),await n.close(),restoreButton.style.display="none",alert("Save successfully!")}async function verifyPermissions(e){return await e.queryPermission({mode:"readwrite"})==="granted"||await e.requestPermission({mode:"readwrite"})==="granted"}async function init(){var e=await idbKeyval.get("file");e&&(restoreButton.style.display="inline-block",restoreButton.addEventListener("click",async function(t){await verifyPermissions(e)&&(fileHandle=e,await restoreFromFile())})),document.body.addEventListener("dragover",function(e){e.preventDefault()}),document.body.addEventListener("drop",async function(e){for(let t of(e.preventDefault(),e.dataTransfer.items))if(console.log(t),"file"===t.kind){let n=await t.getAsFileSystemHandle();"file"===n.kind?(fileHandle=n,restoreFromFile()):n.kind}}),openButton.addEventListener("click",openFile),saveButton.addEventListener("click",saveFile),expandButton.addEventListener("click",expandFile),newButton.addEventListener("click",newFile),themeModeButton.addEventListener("click",lightMode)}markdownContent.addEventListener("input",function(){let e=marked.parse(markdownContent.value);htmlPreview.innerHTML=DOMPurify.sanitize(e,{USE_PROFILES:{html:!0}})});